{"ast":null,"code":"import _classCallCheck from \"/Users/jean-baptiste/Desktop/face-recognition/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jean-baptiste/Desktop/face-recognition/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jean-baptiste/Desktop/face-recognition/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jean-baptiste/Desktop/face-recognition/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jean-baptiste/Desktop/face-recognition/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jean-baptiste/Desktop/face-recognition/src/App.js\";\nimport React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport Navigation from './components/Navigation/Navigation'; // considère .js si rien\n\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition'; // considère .js si rien\n\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport './App.css';\nvar app = new Clarifai.App({\n  // configure accès à l'API Clarifai\n  apiKey: '00c7496d7aaf4243af1e53b1f8f344bd' // ma clé API\n\n});\nvar particlesOptions = {\n  // configure options API animation particules\n  particles: {\n    number: {\n      value: 20,\n      density: {\n        enable: true,\n        value_area: 100\n      }\n    }\n  }\n};\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    // utilise un constructeur pour définir un état\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this)); // pour être capable de l'utiliser\n\n    _this.calculateFaceLocation = function (data) {\n      // reçoit des data\n      var clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      var image = document.getElementById(\"inputimage\");\n      var width = Number(image.width);\n      var height = Number(image.height);\n      return {\n        // retourne un objet qui va remplir la state box\n        leftCol: clarifaiFace.left_col * width,\n        // produit du % partant gauche image par largeur\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    _this.displayFaceBox = function (box) {\n      console.log(box);\n\n      _this.setState({\n        box: box\n      });\n    };\n\n    _this.onInputChange = function (event) {\n      // à chaque fois voit un event sur la page (propriété de App, nécessite trigger (déclencheur))\n      if (route === 'signout') {\n        _this.setState({\n          isSignedIn: false\n        });\n      } else if (route === 'home') {\n        _this.setState;\n      }\n\n      _this.setState({\n        input: event.target.value\n      }); // set le contenu de l'input\n\n    };\n\n    _this.onButtonSubmit = function () {\n      _this.setState({\n        imageUrl: _this.state.input\n      }); // pour passer l'url de l'image au composant FaceRecognition\n\n\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, _this.state.input) // ne peut pas mettre directement imageUrl avec setState\n      .then(function (response) {\n        return _this.displayFaceBox(_this.calculateFaceLocation(response));\n      }) // calculateFaceLocation(response) prend une réponse, renvoit un objet spécifiant coordonnées face-box\n      // cet objet va dans displayFaceBox \n      .catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.onRouteChange = function (route) {\n      _this.setState({\n        route: route\n      });\n    };\n\n    _this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      // va contenir valeurs reçues position visage\n      route: 'signin',\n      // track où se situe dans la page\n      isSignedIn: 'false'\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return (// parenthèses pour insérer plusieurs lignes\n        React.createElement(\"div\", {\n          className: \"App\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, React.createElement(Particles, {\n          className: \"particles\",\n          params: particlesOptions,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }), React.createElement(Navigation, {\n          onRouteChange: this.onRouteChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }), this.state.route === 'home' // condition pour afficher\n        ? React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, React.createElement(Logo, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }), \" \", React.createElement(Rank, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }), React.createElement(ImageLinkForm, {\n          onInputChange: this.onInputChange\n          /* passe les props */\n          ,\n          onButtonSubmit: this.onButtonSubmit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }), React.createElement(FaceRecognition, {\n          box: this.state.box,\n          imageUrl: this.state.imageUrl,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }), \" \") : this.state.route === 'signin' ? React.createElement(Signin, {\n          onRouteChange: this.onRouteChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }) : React.createElement(Register, {\n          onRouteChange: this.onRouteChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }))\n      );\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/jean-baptiste/Desktop/face-recognition/src/App.js"],"names":["React","Component","Particles","Clarifai","Navigation","Signin","Register","FaceRecognition","Logo","ImageLinkForm","Rank","app","App","apiKey","particlesOptions","particles","number","value","density","enable","value_area","calculateFaceLocation","data","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","box","console","log","setState","onInputChange","event","route","isSignedIn","input","target","onButtonSubmit","imageUrl","state","models","predict","FACE_DETECT_MODEL","then","response","catch","err","onRouteChange"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport Navigation from './components/Navigation/Navigation'; // considère .js si rien\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition'; // considère .js si rien\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport './App.css';\n\nconst app = new Clarifai.App({ // configure accès à l'API Clarifai\n  apiKey: '00c7496d7aaf4243af1e53b1f8f344bd' // ma clé API\n})\n\nconst particlesOptions = { // configure options API animation particules\n  particles: {\n    number : {\n      value: 20,\n      density: {\n        enable : true,\n        value_area: 100,\n      }\n    }\n  }\n}\n\nclass App extends Component {\n  constructor() { // utilise un constructeur pour définir un état\n    super(); // pour être capable de l'utiliser\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {}, // va contenir valeurs reçues position visage\n      route: 'signin', // track où se situe dans la page\n      isSignedIn: 'false'\n    }\n  }\n\n  calculateFaceLocation = (data) => { // reçoit des data\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById(\"inputimage\");\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return { // retourne un objet qui va remplir la state box\n      leftCol: clarifaiFace.left_col * width, // produit du % partant gauche image par largeur\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height),\n    }\n  }\n\n  displayFaceBox = (box) => {\n    console.log(box);\n    this.setState({box: box})\n  }\n\n  onInputChange = (event) => { // à chaque fois voit un event sur la page (propriété de App, nécessite trigger (déclencheur))\n    if (route === 'signout') {\n      this.setState({isSignedIn: false})\n    } else if (route === 'home') {\n      this.setState\n    }\n    this.setState({input: event.target.value}); // set le contenu de l'input\n  }\n\n  onButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input}) // pour passer l'url de l'image au composant FaceRecognition\n    app.models\n      .predict(\n        Clarifai.FACE_DETECT_MODEL,\n        this.state.input) // ne peut pas mettre directement imageUrl avec setState\n      .then(response => this.displayFaceBox(this.calculateFaceLocation(response)))\n      // calculateFaceLocation(response) prend une réponse, renvoit un objet spécifiant coordonnées face-box\n      // cet objet va dans displayFaceBox \n      .catch(err => console.log(err))\n  }\n\n  onRouteChange = (route) => {\n    this.setState({route: route});\n  }\n\n  render() {\n    return ( // parenthèses pour insérer plusieurs lignes\n      <div className=\"App\">\n        <Particles className='particles'\n          params={particlesOptions} \n        />\n        <Navigation onRouteChange={this.onRouteChange} />\n        { this.state.route === 'home' // condition pour afficher\n          ? <div>\n              <Logo /> {/* sinon retourne (emballe dans une div pour affichage fonctionne) */}\n              <Rank />\n              <ImageLinkForm \n                onInputChange={this.onInputChange}  /* passe les props */\n                onButtonSubmit={this.onButtonSubmit} \n              />\n              <FaceRecognition box={this.state.box} imageUrl={this.state.imageUrl} /> {/* passe l'url de l'image au composant */}\n            </div>\n          : (\n              this.state.route === 'signin' \n              ? <Signin onRouteChange={this.onRouteChange}/>\n              : <Register onRouteChange={this.onRouteChange}/>\n            )\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}